openapi: 3.0.0
info:
  title: VDX Booking Module API
  description: API description for the VDX Booking interface which allow for scheduling of video meetings. <br/> <br/>
    The overall rules for the different roles are 
    <ul>
      <li> normal meeting user can handle own meetings, including retrieve list of scheduling templates from own organization
      <li> meeting planner can handle meetings in the same organization. By using the organizedByEmail parameter the role can handle meetings on behalf on others
      <li> provisioner can call the provision service and create scheduling information.
      <li> admin user can the same as meeting planner and also create and update scheduling templates
    </Ul>
    <h3>Versions:</h3>
    0.1.1 
    <Ul>
      <Li> changed format for provisionVmrId property on update-scheduling-info request to uuid format
      <Li> added meeting put and delete request
      <Li> removed "api" from each request path
      <Li> renamed ccsid to uuid (as the real API already are using) <br>
      <Li> moved uuid path parameter to "component" part of format to allow for reuse (no functional impact)
      <Li> added response codes for each request
      <Li> only a 'provioner' can run a 'put scheduling-info' request <br> 
    </Ul>
    0.2.0 
    <Ul>
    <Li> added provsionStatusDescription to update-scheduling-info and scheduling-info 
    </Ul>
    0.2.1 
    <Ul>
      <Li> changed format for provisionVmrId property on update-scheduling-info request from uuid format to no format requirement 
    </Ul>
    0.3.0 
    <Ul>
      <Li> added ivrTheme and portalLink to scheduling-info
      <Li> added projectCode and organizedByEmail  to create-meeting and update-meeting
      <Li> added projectCode and organizedBy group to meeting
      <Li> added new role meeting Planner, who can create/update meetings on behalf on others
      <Li> normal meeting user can now only see and update own meetings
      <Li> added updatedBy, createdTime, updatedTime to meeting
      <Li> added createdBy, updatedBy, createdTime, updatedTime to scheduling-info 
    </Ul>
    0.3.1 
    <Ul>
      <Li> all users must have an organisation and an email in order to create or update data
      <Li> not filled organizedByEmail on create-meeting and update-meeting behaves like when field not present (create/update user will be the organizer) 
    </Ul>
    0.4.0 
    <Ul>
      <Li> it is now possible to update endTime on a meeting when it has status PROVISIONED_OK
    </Ul>
    0.5.0 
    <Ul>
      <Li> extended projectCode from 20 to 100 characters
      <Li> added maxParticipants, endMeetingOnEndTime and schedulingTemplateId to create-meeting
      <Li> added post, put, delete and get scheduling-template, the 3 first are only available for admin user
      <Li> within the API it is now posible to have more than one role
    </Ul>
    0.6.0
    <Ul>
      <Li> added post scheduling-info
      <Li> added get pool-info
      <Li> added meetingType and uuid to create-meeting
    </Ul>
    1.0.5 
    <Ul>
      <Li> added errorCode and errorText to 406 - Not Acceptable and 400 - Bad Request 
    </Ul>
    1.1.0 
    <Ul>
      <Li> added get scheduling-info-provision
      <Li> added get scheduling-info-deprovision
      <Li> added guestMicrophone to create-meeting 
    </Ul>
    1.2.0 
    <Ul>
      <Li> added scheduling-info-reserve
      <Li> Extended create meeting with optional field schedulingInfoReservationId
      <Li> Document labels.
    </Ul>
    1.3.0 
    <Ul>
      <Li> added guestPingRequired to create-meeting 
    </UL>
    1.4.0 
    <Ul>
      <Li> Implement HTTP PATCH for updates 
    </UL>
    1.5.0 
    <Ul>
      <Li> added vmrType, hostView, guestView, vmrQuality, enableOverlayText, guestsCanPresent, forcePresenterIntoMain, forceEncryption and muteAllGuests to scheduling-templates, scheduling-info, meetings and scheduling-info-reserve 
    </UL>
    1.6.0 
    <Ul>
      <Li> Added uriWithoutDomain to create meeting. 
    </UL>
    1.6.1 
    <Ul>
      <Li> Updated error text for code 100.
    </Ul>
    1.6.2 
    <Ul>
      <Li> Search by uri with domain and uri without domain.
    </Ul>
    1.6.3 
    <Ul>
      <Li> Possibility to set host and guest pin in POST and PATCH meeting operations.    
    </Ul>
    1.7.0
    <Ul>
      <Li> Added custom portal to scheduling template and scheduling info.
    </Ul>
    1.7.12
    <Ul>
      <Li> Renamed vmrQuality item full_hd to fullhd. Have not yet been used, so it is not causing compatibility problems.
    </Ul>
    1.10.0
    <Ul>
      <Li> Add direct_media to scheduling info and scheduling template.
    </Ul>
    1.12.0
    <Ul>
      <Li> Add additional_information to meeting and create-meeting.
    </Ul>
    1.12.3
    <Ul>
      <Li> Add error message for duplicate key in additional information.
    </Ul>
    1.13.0
    <UL>
      <Li> Update documentation to match source code.
    </UL>

  version: "1.12.3"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: Video Meetings
    description: End user/planner related
  - name: Video Scheduling Information
    description: Provisioner related
  - name: Scheduling Template Administration
    description: Admin related
  - name: Pool
    description: Provisioner related
  - name: Info
    description: not related to a specific request
  - name: Video Meetings V2
    description: End user/planner related
  - name: Video Scheduling Information V2
    description: Provisioner related
  - name: Scheduling Template Administration V2
    description: Admin related
  - name: Pool V2
    description: Provisioner related
  - name: Info V2
    description: not related to a specific request
servers:
  - url: 'http://localhost:8081'
paths:
  /info:
    get:
      tags:
        - Info
      summary: gets some general information on the API
      description: Use this as an initial test to see if the API is up running and replying.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'

  /meetings/findByUriWithDomain:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: find meeting by uri with domain.
      description: find meeting by uri with domain.
      parameters:
        - name: uri
          in: query
          description: uri with domain
          required: true
          schema:
            type: string
          example: '123456@video.domain'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'

  /meetings/findByUriWithoutDomain:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: find meeting by uri without domain.
      description: find meeting by uri without domain.
      parameters:
        - name: uri
          in: query
          description: uri without domain
          required: true
          schema:
            type: string
          example: '12345'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'

  /meetings:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: gets a list of meetings
      description: Gets a list of meetings based on a date interval. The start time of the meeting must be within the date interval in order to be included in the response. <br> NB! using + in timezone should be encoded as %2B. <br> <br> This request also returns a url for the request itself. An example could be "http://localhost:8081/api/meetings?from-start-time=2018-01-01T03:12:30%2B0100&to-start-time=2023-12-31T05:12:30%2B0100".
      parameters:
        - name: from-start-time
          in: query
          description: from start time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ.
          required: false
          schema:
            type: string
            format: date-time
          example: '2018-01-01T03:12:30+%2B0100'
        - name: to-start-time
          in: query
          description: to start time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-12-31T03:12:30+%2B0100'
        - name: short-id
          in: query
          description: short id of meeting, always 12 characters long
          required: false
          schema:
            type: string
            minLength: 12
            maxLength: 12
          example: 'abcdefghijkl'
        - name: subject
          in: query
          description: the subject of a meeting
          required: false
          schema:
            type: string
          example: subject
        - name: organizedBy
          in: query
          description: the organizer of a meeting
          required: false
          schema:
            type: string
          example: organizer
        - name: search
          in: query
          description: common string
          required: false
          schema:
            type: string
          example: searching for this
        - name: label
          in: query
          description: the label of a meeting
          required: false
          schema:
            type: string
          example: label123
        - name: uriWithDomain
          in: query
          description: the uri with domain of a meeting
          required: false
          schema:
            type: string
          example: '123456@video.domain'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
    post:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: adds a new meeting
      description: Adds a new meeting based on the given input data. <br> <br>
        Selecting a template for the meeting is done using the following rules, using the one first matching  <Ul>
        <li> when schedulingTemplateId is is given and valid, this template is used
        <li> organization default template
        <li> shared default template (organization not given)
        </Ul>
      requestBody:
        description: meeting details to use while adding
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-meeting'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '406':
          $ref: '#/components/responses/406_old'
  /meetings/{uuid}:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: gets a specific meeting
      description: Gets a specific meeting based on the given uuid
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
    put:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: updates an existing meeting
      description: Updates a specific meeting. Only allowed when provisionStatus is AWAITS_PROVISION (0) or PROVISIONED_OK (3). In the later case only endTime will be updated
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: meeting details to update with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-meeting'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
        '406':
          $ref: '#/components/responses/406_old'
    patch:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: Updates an existing meeting through HTTP patch
      description: Updates a specific meeting. Only allowed when provisionStatus is AWAITS_PROVISION (0) or PROVISIONED_OK (3). In the later case only endTime can be updated.
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: Meeting details to update with. If field is NOT present in the json structure it will not be updated. If field is set to null it will be deleted in the meeting.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch-meeting'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
        '406':
          $ref: '#/components/responses/406_old'
    delete:
      security:
        - userContext: [ ]
      tags:
        - Video Meetings
      summary: deletes an existing meeting
      description: Deletes a specific meeting. Only allowed when provisionStatus is AWAITS_PROVISION (0)
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
        '406':
          $ref: '#/components/responses/406_old'
  /scheduling-info:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: gets a list of scheduling informations from meetings
      description: Gets a a list of scheduling informations based on date interval and provision status. The start (minus VMR available before) or end time of the meeting must be within the date interval in order to be included in the response. Scheduling information is the "technically" part of a meeting. This request is e.g. the one to retrieve in order to determine what meetings to provision. <br> NB! using + in timezone should be encoded as %2B. <br> <br> This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-info??from-start-time=2018-01-01T03:12:30%2B0100&to-end-time=2023-12-31T05:12:30%2B0100&provision-status=AWAITS_PROVISION"
      parameters:
        - name: from-start-time
          in: query
          description: from start time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ.
          required: true
          schema:
            type: string
            format: date-time
          example: '2018-01-01T03:12:30+%2B0100'
        - name: to-end-time
          in: query
          description: to end time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ
          required: true
          schema:
            type: string
            format: date-time
          example: '2023-12-31T03:12:30+%2B0100'
        - name: provision-status
          in: query
          description:  Corresponds to numeric status 0, 1, 2, 3, 4, 5 and 6. <br>When not included the default value "AWAITS_PROVISION" will be used.
          required: false
          schema:
            $ref: '#/components/schemas/provisionStatus'
            default: AWAITS_PROVISION
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
    post:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: adds a new scheduling info
      description: Adds a new scheduling information based on the given input data. <br> <br>
        Selecting a template is done as when adding (post) a meeting
        </Ul>
      requestBody:
        description: sheduling info details to use while adding
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-scheduling-info'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '406':
          $ref: '#/components/responses/406_old'
  /scheduling-info/{uuid}:
    put:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: updates an existing scheduling-info
      description: Updates a specific scheduling information. Scheduling information is the "technically" part of a meeting
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: scheduling information to update with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-scheduling-info'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
        '406':
          $ref: '#/components/responses/406_old'
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: gets a specific scheduling information
      description: Gets a specific scheduling information based on the given uuid
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
  /scheduling-templates:
    get:
      security:
        - userContext: [ ]
      tags:
        - Scheduling Template Administration
      summary: gets a list of scheduling templates matching own organization
      description: Gets a list of scheduling templates matching the organization of the user requesting.  <br> <br> This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-templates/7".
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
    post:
      security:
        - userContext: [ ]
      tags:
        - Scheduling Template Administration
      summary: adds a new scheduling template
      description: Adds a new scheduling template based on the given input data. If template is indicated as default, any other default template for same organization will be made non-default
      requestBody:
        description: scheduling template details to use while adding
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedulingTemplateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
  /scheduling-templates/{id}:
    get:
      security:
        - userContext: [ ]
      tags:
        - Scheduling Template Administration
      summary: gets a specific scheduling template
      description: Gets a specific scheduling template based on the given id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
    put:
      security:
        - userContext: [ ]
      tags:
        - Scheduling Template Administration
      summary: updates an existing scheduling template
      description: Updates a specific scheduling template. If template is indicated as default, any other default template for same organization will be made non-default
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: scheduling template details to update with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedulingTemplateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
    delete:
      security:
        - userContext: [ ]
      tags:
        - Scheduling Template Administration
      summary: deletes an existing scheduling template
      description: Deletes a specific scheduling template.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'
  /scheduling-info-provision:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: gets a list of scheduling informations on meetings waiting to be provisioned
      description: Gets a a list of scheduling informations to provision based on date and provision status. Scheduling information is the "technically" part of a meeting. This request is e.g. the one to retrieve in order to determine what meetings to provision." <br> <br> This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-info-provision/".
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
  /scheduling-info-deprovision:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: gets a list of scheduling informations on meetings waiting to be deprovisioned
      description: Gets a a list of scheduling informations to deprovision based on date and provision status. Scheduling information is the "technically" part of a meeting. This request is e.g. the one to retrieve in order to determine what meetings to deprovision." <br> <br> This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-info-deprovision/".
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'

  /scheduling-info-reserve:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: Reserves af scheduling info for later use. This enables knowing the host pin etc. before creating the meeting.
      description: Reserve a single scheduling info from the organisations pool.".
      parameters:
        - name: vmrType
          in: query
          description: Type of the virtual meetingroom
          required: false
          schema:
            $ref: '#/components/schemas/vmrType'
          example: 'lecture'
        - name: hostView
          in: query
          description: The layout seen by Hosts
          required: false
          schema:
            $ref: '#/components/schemas/viewType'
          example: 'one_main_zero_pips'
        - name: guestView
          in: query
          description: The layout seen by Guests
          required: false
          schema:
            $ref: '#/components/schemas/viewType'
          example: 'one_main_zero_pips'
        - name: vmrQuality
          in: query
          description: Controls the maximum call quality for participants connecting to this service
          required: false
          schema:
            $ref: '#/components/schemas/vmrQuality'
          example: 'fullhd'
        - name: enableOverlayText
          in: query
          description: 'If participant name overlays are enabled, the display names or aliases of all participants are shown in a text overlay along the bottom of their video image. <br> Default value: true'
          required: false
          schema:
            type: boolean
          example: 'false'
        - name: guestsCanPresent
          in: query
          description: 'Controls whether the Guests in the conference are allowed to present content. <br> Default value: true'
          required: false
          schema:
            type: boolean
          example: 'false'
        - name: forcePresenterIntoMain
          in: query
          description: 'Controls whether the Host who is presenting is locked into the main video position. <br> Default value: true'
          required: false
          schema:
            type: boolean
          example: 'false'
        - name: forceEncryption
          in: query
          description: 'Default value: false'
          required: false
          schema:
            type: boolean
          example: 'false'
        - name: muteAllGuests
          in: query
          description: 'Controls whether to mute guests when they first join the conference. <br> Default value: true'
          required: false
          schema:
            type: boolean
          example: 'false'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'

  /scheduling-info-reserve/{uuid}:
    get:
      security:
        - userContext: [ ]
      tags:
        - Video Scheduling Information
      summary: Get scheduling info by reservation id.
      description: Read a single scheduling info by id.
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'
        '404':
          $ref: '#/components/responses/404_old'

  /pool:
    get:
      security:
        - userContext: [ ]
      tags:
        - Pool
      summary: returns a list of pool information
      description: Gets the pool information per organization including the default scheduling template for the organization. If this schedulingTemplate is null it is because the organisation in question do not have a default template. A default template must be created before it is possible to create scheduling info. <br> <br> This request also returns a url for the request itself. An example could be "http://localhost:8081/api/pool/".
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pool-info'
        '400':
          $ref: '#/components/responses/400_old'
        '401':
          $ref: '#/components/responses/401_old'
        '403':
          $ref: '#/components/responses/403_old'

  /v2/info:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Info V2
      summary: gets some general information on the API
      description: >-
        Use this as an initial test to see if the API is up running and replying. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /v2/meetings/findByUriWithDomain:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: find meeting by uri with domain.
      description: >-
        Find meeting by uri with domain. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      parameters:
        - name: uri
          in: query
          description: uri with domain
          required: true
          schema:
            type: string
          example: '123456@video.domain'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /v2/meetings/findByUriWithoutDomain:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: find meeting by uri without domain.
      description: >-
        Find meeting by uri without domain. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      parameters:
        - name: uri
          in: query
          description: uri without domain
          required: true
          schema:
            type: string
          example: '12345'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /v2/meetings:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: gets a list of meetings
      description: >-
        Gets a list of meetings based on query parameters. 
        If one is present the remaining are ignored. <br>
        The query parameters are handled in order: <br>
        * short-id <br>
        * label <br>
        * subject <br>
        * organized-by <br>
        * search (also from-start-time and to-start-time if present) <br>
        * from-start-time and to-start-time <br>
        * uri-with-domain <br>
        
        Note that either both from-start-time and to-start-time must be provided or none of them must be provided. <br>
        When using from-start-time and to-start-time the start time of the meeting must be within the date interval in order to be included in the response. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      parameters:
        - name: from-start-time
          in: query
          description: from start time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ.
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-03-31T11:25:44.512Z'
        - name: to-start-time
          in: query
          description: to start time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-03-31T11:25:44.512Z'
        - name: short-id
          in: query
          description: short id of meeting, always 12 characters long
          required: false
          schema:
            type: string
            minLength: 12
            maxLength: 12
          example: 'abcdefghijkl'
        - name: subject
          in: query
          description: the subject of a meeting
          required: false
          schema:
            type: string
          example: subject
        - name: organizedBy
          in: query
          description: the organizer of a meeting
          required: false
          schema:
            type: string
          example: organizer
        - name: search
          in: query
          description: common string
          required: false
          schema:
            type: string
          example: searching for this
        - name: label
          in: query
          description: the label of a meeting
          required: false
          schema:
            type: string
          example: label123
        - name: uriWithDomain
          in: query
          description: the uri with domain of a meeting
          required: false
          schema:
            type: string
          example: '123456@video.domain'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: adds a new meeting
      description: >-
        Adds a new meeting based on the given input data. <br> <br>
        Selecting a template for the meeting is done using the following rules, using the one first matching  <Ul>
        <li> when schedulingTemplateId is is given and valid, this template is used
        <li> organization default template
        <li> shared default template (organization not given)
        </Ul> <br> <br>
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner-user
      requestBody:
        description: meeting details to use while adding
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-meeting'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'

  /v2/meetings/{uuid}:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: gets a specific meeting
      description: >-
        Gets a specific meeting based on the given uuid. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: updates an existing meeting
      description: >-
        Updates a specific meeting. Only allowed when provisionStatus is AWAITS_PROVISION (0) or PROVISIONED_OK (3). 
        In the later case only endTime will be updated. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner-user
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: meeting details to update with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-meeting'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: Updates an existing meeting through HTTP patch
      description: >-
        Updates a specific meeting. Only allowed when provisionStatus is AWAITS_PROVISION (0) or PROVISIONED_OK (3). 
        In the later case only endTime can be updated. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner-user
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: Meeting details to update with. If field is NOT present in the json structure it will not be updated. If field is set to null it will be deleted in the meeting.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch-meeting'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/meeting'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - keycloakOIDC: []
      tags:
        - Video Meetings V2
      summary: deletes an existing meeting
      description: >-
        Deletes a specific meeting. Only allowed when provisionStatus is AWAITS_PROVISION (0). <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner-user
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'

  /v2/scheduling-info:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: gets a list of scheduling informations from meetings
      description: >-
        Gets a a list of scheduling informations based on date interval and provision status. The start 
        (minus VMR available before) or end time of the meeting must be within the date interval in order to be included 
        in the response. Scheduling information is the "technically" part of a meeting. This request is e.g. the one to 
        retrieve in order to determine what meetings to provision. <br> NB! using + in timezone should be encoded as %2B. <br> <br> 
        This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-info??from-start-time=2018-01-01T03:12:30%2B0100&to-end-time=2023-12-31T05:12:30%2B0100&provision-status=AWAITS_PROVISION" <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      parameters:
        - name: from-start-time
          in: query
          description: from start time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ.
          required: true
          schema:
            type: string
            format: date-time
          example: '2023-03-31T11:25:44.512Z'
        - name: to-end-time
          in: query
          description: to end time, date format is yyyy-MM-dd'T'HH:mm:ssZZZ
          required: true
          schema:
            type: string
            format: date-time
          example: '2023-03-31T11:25:44.512Z'
        - name: provision-status
          in: query
          description:  Corresponds to numeric status 0, 1, 2, 3, 4, 5 and 6. <br>When not included the default value "AWAITS_PROVISION" will be used.
          required: false
          schema:
            $ref: '#/components/schemas/provisionStatus'
            default: AWAITS_PROVISION
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: adds a new scheduling info
      description: >-
        Adds a new scheduling information based on the given input data. <br> <br>
        Selecting a template is done as when adding (post) a meeting. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-provisioner-user
      requestBody:
        description: scheduling info details to use while adding
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-scheduling-info'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'

  /v2/scheduling-info/{uuid}:
    put:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: updates an existing scheduling-info
      description: >-
        Updates a specific scheduling information. Scheduling information is the "technically" part of a meeting. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-provisioner-user
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: scheduling information to update with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-scheduling-info'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: gets a specific scheduling information
      description: >-
        Gets a specific scheduling information based on the given uuid. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /v2/scheduling-templates:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Scheduling Template Administration V2
      summary: gets a list of scheduling templates matching own organization
      description: >-
        Gets a list of scheduling templates matching the organization of the user requesting.  <br> <br> 
        This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-templates/7". <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      security:
        - keycloakOIDC: []
      tags:
        - Scheduling Template Administration V2
      summary: adds a new scheduling template
      description: >-
        Adds a new scheduling template based on the given input data. If template is indicated as default, any other 
        default template for same organization will be made non-default. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin
      requestBody:
        description: scheduling template details to use while adding
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedulingTemplateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /v2/scheduling-templates/{id}:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Scheduling Template Administration V2
      summary: gets a specific scheduling template
      description: >-
        Gets a specific scheduling template based on the given id. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - keycloakOIDC: []
      tags:
        - Scheduling Template Administration V2
      summary: updates an existing scheduling template
      description: >-
        Updates a specific scheduling template. If template is indicated as default, any other default template for same 
        organization will be made non-default. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: scheduling template details to update with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedulingTemplateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-template'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - keycloakOIDC: []
      tags:
        - Scheduling Template Administration V2
      summary: deletes an existing scheduling template
      description: >-
        Deletes a specific scheduling template. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /v2/scheduling-info-provision:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: gets a list of scheduling informations on meetings waiting to be provisioned
      description: >-
        Gets a a list of scheduling informations to provision based on date and provision status. Scheduling information 
        is the "technically" part of a meeting. This request is e.g. the one to retrieve in order to determine what 
        meetings to provision." <br> <br> 
        This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-info-provision/". <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-provisioner-user
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /v2/scheduling-info-deprovision:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: gets a list of scheduling informations on meetings waiting to be deprovisioned
      description: >-
        Gets a a list of scheduling informations to deprovision based on date and provision status. Scheduling 
        information is the "technically" part of a meeting. This request is e.g. the one to retrieve in order to 
        determine what meetings to deprovision." <br> <br> 
        This request also returns a url for the request itself. An example could be "http://localhost:8081/api/scheduling-info-deprovision/". <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-provisioner-user
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /v2/scheduling-info-reserve:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: Reserves af scheduling info for later use. This enables knowing the host pin etc. before creating the meeting.
      description: >-
        Reserve a single scheduling info from the organisations pool.". <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin
      parameters:
        - name: vmrType
          in: query
          description: Type of the virtual meetingroom
          required: false
          schema:
            $ref: '#/components/schemas/vmrType'
            default: conference
          example: 'lecture'
        - name: hostView
          in: query
          description: The layout seen by Hosts
          required: false
          schema:
            $ref: '#/components/schemas/viewType'
            default: one_main_seven_pips
          example: 'one_main_zero_pips'
        - name: guestView
          in: query
          description: The layout seen by Guests
          required: false
          schema:
            $ref: '#/components/schemas/viewType'
            default: one_main_seven_pips
          example: 'one_main_zero_pips'
        - name: vmrQuality
          in: query
          description: Controls the maximum call quality for participants connecting to this service
          required: false
          schema:
            $ref: '#/components/schemas/vmrQuality'
            default: hd
          example: 'fullhd'
        - name: enableOverlayText
          in: query
          description: 'If participant name overlays are enabled, the display names or aliases of all participants are shown in a text overlay along the bottom of their video image. <br> Default value: true'
          required: false
          schema:
            type: boolean
            default: true
          example: 'false'
        - name: guestsCanPresent
          in: query
          description: 'Controls whether the Guests in the conference are allowed to present content. <br> Default value: true'
          required: false
          schema:
            type: boolean
            default: true
          example: 'false'
        - name: forcePresenterIntoMain
          in: query
          description: 'Controls whether the Host who is presenting is locked into the main video position. <br> Default value: true'
          required: false
          schema:
            type: boolean
            default: true
          example: 'false'
        - name: forceEncryption
          in: query
          description: 'Default value: false'
          required: false
          schema:
            type: boolean
            default: false
          example: 'false'
        - name: muteAllGuests
          in: query
          description: 'Controls whether to mute guests when they first join the conference. <br> Default value: true'
          required: false
          schema:
            type: boolean
            default: false
          example: 'false'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /v2/scheduling-info-reserve/{uuid}:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Video Scheduling Information V2
      summary: Get scheduling info by reservation id.
      description: >- 
        Read a single scheduling info by id. <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /v2/pool:
    get:
      security:
        - keycloakOIDC: []
      tags:
        - Pool V2
      summary: returns a list of pool information
      description: >- 
        Gets the pool information per organization including the default scheduling template for the organization. 
        If this schedulingTemplate is null it is because the organisation in question do not have a default template.
        A default template must be created before it is possible to create scheduling info. <br> <br> 
        This request also returns a url for the request itself. An example could be "http://localhost:8081/api/pool/". <br> <br> 
        The following values of the user role claim grants access: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user
      responses:
        '200':
          description: Ok
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pool-info'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

components:
  securitySchemes:
    userContext:
      type: apiKey
      in: header
      name: X-SESSIONDATA

    keycloakOIDC:
      type: oauth2
      description: >-
        OIDC security implemented by Keycloak. The token should contain a user role claim with at least one of the following values: <br>
        * meeting-admin <br>
        * meeting-user <br>
        * meeting-planner <br>
        * meeting-provisioner <br>
        * meeting-provisioner-user <br> <br>
        It is specified in the description of the endpoint which values grants access.
      flows:
        authorizationCode:
          authorizationUrl: https://<keycloak-url>/realms/<realm>/protocol/openid-connect/auth
          tokenUrl: https://<keycloak-url>/realms/<realm>/protocol/openid-connect/token
          scopes: {}
        clientCredentials:
          tokenUrl: https://<keycloak-url>/realms/<realm>/protocol/openid-connect/token
          scopes: {}

  parameters:
    uuid:
      name: uuid
      in: path
      description: the uuid for the requested information
      required: true
      schema:
        type: string
        format: uuid
      example: 46b46a1e-a4d3-4387-87ee-a67dcaa222cb
    id:
      name: id
      in: path
      description: the id for the requested information
      required: true
      schema:
        type: integer
        format: int64
      example: 7
  responses:
    '400_old':
      description: "Bad Request. This could be because: <br> * invalid date format in date format parameters/properties <br> * a uuid parameter does not have the correct format <br>  * one of the required parameters/properties are missing or is empty <br> * length of input is exeeding maximum length <br> * referenced entities like organisation, templates etc has some problems <br> (See a possible detailed error message in the in the response.)"
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/bad-request'
          examples:
            10:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 10
                errorText: 'Can not create ad hoc meeting on non ad hoc organization: xxx'
            11:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 11
                errorText: 'Unused scheduling information not found for organisation xxx'
            12:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 12
                errorText: 'ExternalId not unique within organisation.'
            13:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 13
                errorText: 'OrganisationId xxx in request not found.'
            14:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 14
                errorText: 'Scheduling information can not be created on organisation xxx that is not pool enabled.'
            20:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 20
                errorText: 'Unable to generate unique shortId. Try again.'
            30:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 30
                errorText: 'Date format is wrong, year must only have 4 digits'
            40:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 40
                errorText: 'Scheduling template xxx not found.'
            41:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 41
                errorText: 'Scheduling template xxx not found.'
            50:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 50
                errorText: 'Scheduling template xxx not found.'
    '401_old':
      description: "Unauthorized. This could be because: <br> * the role of the user may not use the request (only PROVISIONER can use the scheduling-info post request and only ADMIN can use the scheduling-template post and put request) <br> * the role mapping between 'user context' and the video API does not match <br> * the user is not correct configured. It could be missing email or organisation"
    '403_old':
      description: "Forbidden. This could be because: <br> * the meeting requested does not belong the organisation of the user <br> * the meeting requested is not organized by the user <br> * The organisation of the user has not been created in the Video API"
    '404_old':
      description: "Not Found. This could be because: <br> * the uuid being requested has been deleted <br> * the uuid being requested has never existed <br> * the id (scheduling template) being requested does not exist"
    '406_old':
      description: "Not Acceptable. This could be because: <br> * Status of the meeting is not AWAITS_PROVISION or PROVISIONED_OK<br> * template configuration was inadequate <br> (See a possible detailed error message in the in the response.)"
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/not-acceptable'
          examples:
            10:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 10
                errorText: 'Meeting must have status AWAITS_PROVISION (0)  or PROVISIONED_OK (3) in order to be updated'
            11:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 11
                errorText: 'Meeting must have status AWAITS_PROVISION (0) in order to be deleted'
            20:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 20
                errorText: 'The Uri assignment failed due to invalid setup on the template used'
            21:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 21
                errorText: 'The Uri assignment failed. It was not possible to create a unique. Consider changing the interval on the template'
            30:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 30
                errorText: 'The guest pincode assignment failed due to invalid setup on the template used'
            31:
              value:
                timestamp: '2020-11-23T10:55:51.765906351Z'
                status: 400
                error: Bad Request
                message: Unable to generate unique shortId. Try again.
                path: /meetings
                errorCode: 31
                errorText: 'The host pincode assignment failed due to invalid setup on the template used'

    '400':
      description: >-
        Bad Request. This could be because: <br>
        * One of the required parameters/properties are missing or is empty <br>
        * Input parameter that should be unique is not unique <br>
        * Format of parameter/property is wrong <br>
        * Request not allowed due to organisation settings <br>
        * No unused scheduling information found for organisation <br>
        * Unable to generate unique shortId. Try again <br>
        * Scheduling template not found <br>
        * Scheduling info reservation can not be used in combination with guest pin and/or host pin <br>
        (See a possible detailed error message in the response.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
    '401':
      description: >-
        Unauthorized. This could be because: <br>
        * The role of the user may not use the request (only PROVISIONER can use the scheduling-info post request and only ADMIN can use the scheduling-template post and put request) <br>
        * The role mapping between 'user context' and the video API does not match <br> 
        * The user is not correct configured. It could be missing email or organisation <br>
        (See a possible detailed error message in the response.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
    '403':
      description: >-
        Forbidden. This could be because: <br>
        * The meeting requested does not belong the organisation of the user <br> 
        * The meeting requested is not organized by the user <br> 
        * The organisation of the user has not been created in the Video API <br>
        (See a possible detailed error message in the response.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
    '404':
      description: >-
        Not found. This could be because: <br>
        * The uuid being requested has been deleted <br> 
        * The uuid being requested has never existed <br> 
        * The id (scheduling template) being requested does not exist <br>
        (See a possible detailed error message in the response.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
    '406':
      description: >-
        Not Acceptable. This could be because: <br>
        * The meeting does not have correct provision status for update or delete allowed <br>
        * Invalid setup on template or uri interval on template too small <br>
        * Create or update pool template, when pool template already exists <br>
        (See a possible detailed error message in the response.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
    '500':
      description: >-
        Internal Server Error. This could be because: <br>
        * An unexpected error occurred <br>
        (See a possible detailed error message in the response.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
  schemas:
    info:
      type: object
      properties:
        info:
          type: array
          items:
            $ref: '#/components/schemas/infoType'

    infoType:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          maxLength: 100
          description: info key
          example: "git"
        value:
          type: object
          description: info value
          example: "{branch=master, commit={id=9fa0555, time=27.01.2025 @ 11:35:12 CET}}"

    meeting:
      type: object
      required:
        - subject
        - uuid
        - createdBy
        - organizedBy
        - startTime
        - endTime
        - _links
        - shortId
      properties:
        subject:
          type: string
          maxLength: 100
          example: Short talk about hiring new people
        uuid:
          type: string
          format: uuid
          example: 46b46a1e-a4d3-4387-87ee-a67dcaa222cb
        createdBy:
          $ref: '#/components/schemas/meetingUser'
        updatedBy:
          $ref: '#/components/schemas/meetingUser'
        organizedBy:
          $ref: '#/components/schemas/meetingUser'
        startTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        endTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        description:
          type: string
          maxLength: 500
          example: We need to agree on the process should be. And what deadlines we have during the next 14 days.
        projectCode:
          type: string
          maxLength: 100
          example: PROJECT001.
        createdTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        updatedTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        shortId:
          type: string
          minLength: 12
          maxLength: 12
          example: abcdefghijkl
        shortLink:
          type: string
          example: https://m.vconf.dk/abcdefghijkl
        shortlink:
          type: string
          example: https://m.vconf.dk/abcdefghijkl
        externalId:
          type: string
          maxLength: 200
          example: 87527808-147f-4c54-88be-aec56c7194a3
        guestMicrophone:
          $ref: '#/components/schemas/guestMicrophone'
        guestPinRequired:
          type: boolean
          example: false
          description: When true shortlink will aske for pin
        labels:
          type: array
          items:
            type: string
            description: Array of labels to attach to meeting.
        _links:
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: http://localhost:8081/api/meetings/46b46a1e-a4d3-4387-87ee-a67dcaa222cb
            scheduling-info:
              description: this link is only returned for "/api/meetings" get operation.
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: http://localhost:8081/api/scheduling-info/46b46a1e-a4d3-4387-87ee-a67dcaa222cb
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/additionalInformationType'

    create-meeting:
      type: object
      required:
        - subject
        - startTime
        - endTime
      properties:
        subject:
          type: string
          maxLength: 100
          example: Short talk about hiring new people
        startTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        endTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        description:
          type: string
          maxLength: 500
          example: We need to agree on the process should be. And what deadlines we have during the next 14 days.
        projectCode:
          type: string
          maxLength: 100
          example: PROJECT001.
        organizedByEmail:
          type: string
          example: mail@mail.dk
        maxParticipants:
          type: integer
          format: int32
          example: 5
          description: When included it will override any value from the scheduling template
        endMeetingOnEndTime:
          type: boolean
          example: true
          description: When included it will override any value from the scheduling template
        schedulingTemplateId:
          type: integer
          format: int64
          example: 5
          description: when valid value included it will override the default template
        meetingType:
          $ref: '#/components/schemas/meetingType'
        uuid:
          type: string
          format: uuid
          example: 46b46a1e-a4d3-4387-87ee-a67dcaa222cb
        externalId:
          type: string
          maxLength: 200
          example: dacb0d32-11ff-47c4-89bc-7893139a92a7
        guestMicrophone:
          $ref: '#/components/schemas/guestMicrophone'
          description: Will be set to 'on' if not set in create meeting request.
        guestPinRequired:
          type: boolean
          example: false
          description: When true shortLink will ask for pin
        schedulingInfoReservationId:
          type: string
          format: uuid
          description: Scheduling info reservation ID to use for this meeting. The ID must belong to the same organisation and not used by other meeting.
          example: 8103c61c-eb64-4148-984b-1236f4ff5849
        labels:
          type: array
          items:
            type: string
            description: Array of labels to attach to meeting.
        vmrType:
          $ref: '#/components/schemas/vmrType'
        hostView:
          $ref: '#/components/schemas/viewType'
        guestView:
          $ref: '#/components/schemas/viewType'
        vmrQuality:
          $ref: '#/components/schemas/vmrQuality'
        enableOverlayText:
          type: boolean
          example: true
          default: true
          description: if participant name overlays are enabled, the display names or aliases of all participants are shown in a text overlay along the bottom of their video image
        guestsCanPresent:
          type: boolean
          example: true
          default: true
          description: controls whether the Guests in the conference are allowed to present content
        forcePresenterIntoMain:
          type: boolean
          example: true
          default: true
          description: controls whether the Host who is presenting is locked into the main video position
        forceEncryption:
          type: boolean
          example: false
          default: false
        muteAllGuests:
          type: boolean
          example: false
          default: false
          description: controls whether to mute guests when they first join the conference
        uriWithoutDomain:
          type: string
          example: 574893
          maxLength: 100
          description: Uri without domain. Only allowed if organisation configured to support it.
        guestPin:
          type: integer
          format: int32
          minimum: 1000
          maximum: 999999999
        hostPin:
          type: integer
          format: int32
          minimum: 1000
          maximum: 999999999
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/additionalInformationType'

    update-meeting:
      type: object
      required:
        - subject
        - startTime
        - endTime
      properties:
        subject:
          type: string
          maxLength: 100
          example: Short talk about hiring new people
        startTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        endTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        description:
          type: string
          maxLength: 500
          example: We need to agree on the process should be. And what deadlines we have during the next 14 days.
        projectCode:
          type: string
          maxLength: 100
          example: PROJECT001.
        organizedByEmail:
          type: string
          example: mail@mail.dk
        labels:
          type: array
          items:
            type: string
            description: Array of labels to attach to meeting.
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/additionalInformationType'
    patch-meeting:
      type: object
      properties:
        subject:
          type: string
          maxLength: 100
          example: Short talk about hiring new people
        startTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        endTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        description:
          type: string
          maxLength: 500
          example: We need to agree on the process should be. And what deadlines we have during the next 14 days.
        projectCode:
          type: string
          maxLength: 100
          example: PROJECT001.
        organizedByEmail:
          type: string
          example: mail@mail.dk
        labels:
          type: array
          items:
            type: string
            description: Array of labels to attach to meeting.
        guestMicrophone:
          $ref: '#/components/schemas/guestMicrophone'
        guestPinRequired:
          type: boolean
          example: false
          description: When true shortlink will ask for pin
        guestPin:
          type: integer
          format: int32
          minimum: 1000
          maximum: 999999999
        hostPin:
          type: integer
          format: int32
          minimum: 1000
          maximum: 999999999
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/additionalInformationType'

    scheduling-info:
      type: object
      required:
        - uuid
        - vmrAvailableBefore
        - maxParticipants
        - endMeetingOnEndTime
        - uriWithDomain
        - uriWithoutDomain
        - provisionStatus
      properties:
        uuid:
          type: string
          format: uuid
          example: 46b46a1e-a4d3-4387-87ee-a67dcaa222cb
        hostPin:
          type: integer
          format: int32
          example: 1234
        guestPin:
          type: integer
          format: int32
          example: 1234
        vmrAvailableBefore:
          type: integer
          format: int32
          example: 30
          description: the number of minutes VMR meeting must be available before start
        maxParticipants:
          type: integer
          format: int32
          example: 5
        endMeetingOnEndTime:
          type: boolean
          example: true
        uriWithDomain:
          type: string
          maxLength: 100
          example: 1782@test.dk
        uriWithoutDomain:
          type: string
          maxLength: 100
          example: 1782
          nullable: true
        provisionStatus:
          $ref: '#/components/schemas/provisionStatus'
        provisionStatusDescription:
          type: string
          example: Provisioning problems - The remote server returned an error (123)
          maxLength: 200
        portalLink:
          type: string
          example: 'https://portal.vconf.dk/?url=4618@test.dk&pin=9180&start_dato=2018-11-01T11:15:00'
          maxLength: 200
        ivrTheme:
          type: string
          example: '10'
          maxLength: 100
        provisionTimestamp:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        provisionVmrId:
          type: string
          maxLength: 50
        vmrType:
          $ref: '#/components/schemas/vmrType'
        hostView:
          $ref: '#/components/schemas/viewType'
        guestView:
          $ref: '#/components/schemas/viewType'
        vmrQuality:
          $ref: '#/components/schemas/vmrQuality'
        enableOverlayText:
          type: boolean
          example: true
          default: true
          description: if participant name overlays are enabled, the display names or aliases of all participants are shown in a text overlay along the bottom of their video image
        guestsCanPresent:
          type: boolean
          example: true
          default: true
          description: controls whether the Guests in the conference are allowed to present content
        forcePresenterIntoMain:
          type: boolean
          example: true
          default: true
          description: controls whether the Host who is presenting is locked into the main video position
        forceEncryption:
          type: boolean
          example: false
          default: false
        muteAllGuests:
          type: boolean
          example: false
          default: false
          description: controls whether to mute guests when they first join the conference
        createdBy:
          $ref: '#/components/schemas/meetingUser'
        updatedBy:
          $ref: '#/components/schemas/meetingUser'
        createdTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        updatedTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        reservationId:
          type: string
          format: uuid
          example: 569ce82e-385b-4ccc-9648-e86129a72fce
        customPortalGuest:
          type: string
          example: https://some.custom.portal/%uri-with-domain%?pin=%pin%
          maxLength: 200
          description: If the scheduling info is using a custom portal for the guest portal.
        customPortalHost:
          type: string
          example: https://some.custom.portal/%uri-with-domain%?pin=%pin%
          maxLength: 200
          description: If the scheduling info is using a custom portal for the host portal.
        returnUrl:
          type: string
          example: https://some.url/xyz
          maxLength: 200
          description: If set this is the url that the portal should redirect the user to when the meeting ends.
        meetingDetails:
          $ref: '#/components/schemas/meeting'
        _links:
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: http://localhost:8081/api/scheduling-info/46b46a1e-a4d3-4387-87ee-a67dcaa222cb
        directMedia:
          $ref: '#/components/schemas/directMedia'
        shortLink:
          type: string
          example: https://m.vconf.dk/abcdefghijkl
        shortlink:
          type: string
          example: https://m.vconf.dk/abcdefghijkl

    create-scheduling-info:
      type: object
      required:
        - organizationId
        - provisionVmrId
      properties:
        organizationId:
          type: string
          maxLength: 30
        schedulingTemplateId:
          type: integer
          format: int64
          example: 5
          description: The scheduling template to use for the scheduling info.

    update-scheduling-info:
      type: object
      required:
        - provisionStatus
      properties:
        provisionStatus:
          $ref: '#/components/schemas/provisionStatus'
        provisionStatusDescription:
          type: string
          example: Provisioning problems - The remote server returned an error (ERR123)
          maxLength: 200
        provisionVmrId:
          type: string
          maxLength: 50

    meetingUser:
      type: object
      properties:
        organisationId:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 45
    guestMicrophone:
      example: muted
      description: Corresponds to numeric status 0, 1 and 2.
      type: string
      enum:
        - 'muted'
        - 'off'
        - 'on'
    meetingType:
      example: NORMAL
      description: Indicates what type the meeting has.
      type: string
      default: NORMAL
      enum:
        - NORMAL
        - POOL
    provisionStatus:
      example: AWAITS_PROVISION
      description: Corresponds to numeric status 0, 1, 2, 3, 4, 5 and 6.
      type: string
      enum:
        - AWAITS_PROVISION
        - STARTING_TO_PROVISION
        - PROVISION_PROBLEMS
        - PROVISIONED_OK
        - STARTING_TO_DEPROVISION
        - DEPROVISION_PROBLEMS
        - DEPROVISION_OK
    vmrType:
      example: conference
      description: Corresponds to numeric status 0 and 1.
      type: string
      default: conference
      enum:
        - conference
        - lecture
    viewType:
      example: one_main_seven_pips
      description: Corresponds to numeric status 0, 1, 2, 3 and 4.
      type: string
      default: one_main_seven_pips
      enum:
        - one_main_zero_pips
        - one_main_seven_pips
        - one_main_twentyone_pips
        - two_mains_twentyone_pips
        - four_mains_zero_pips
        - five_mains_seven_pips
        - one_main_thirtythree_pips
        - nine_mains_zero_pips
        - sixteen_mains_zero_pips
        - twentyfive_mains_zero_pips
    vmrQuality:
      example: hd
      description: Corresponds to numeric status 0, 1 and 2.
      type: string
      enum:
        - sd
        - hd
        - fullhd
    directMedia:
      example: best_effort
      description: Direct media
      type: string
      default: never
      enum:
        - never
        - best_effort
    additionalInformationType:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          maxLength: 100
          description: additional information key
        value:
          type: string
          maxLength: 100
          description: additional information value

    scheduling-template:
      type: object
      required:
        - id
        - organisationId
        - conferencingSysId
        - uriPrefix
        - uriDomain
        - hostPinRequired
        - guestPinRequired
        - vMRAvailableBefore
        - maxParticipants
        - endMeetingOnEndTime
        - uriNumberRangeLow
        - uriNumberRangeHigh
        - ivrTheme
        - isPoolTemplate
        - directMedia
      properties:
        id:
          type: integer
          format: int64
          example: 9
        organisationId:
          type: string
          maxLength: 30
        conferencingSysId:
          type: integer
          format: int64
          example: 1234
        uriPrefix:
          type: string
          maxLength: 100
        uriDomain:
          type: string
          maxLength: 100
          example: "test.dk"
        hostPinRequired:
          type: boolean
          example: true
        hostPinRangeLow:
          type: integer
          format: int64
          example: 1000
        hostPinRangeHigh:
          type: integer
          format: int64
          example: 9999
        guestPinRequired:
          type: boolean
          example: true
        guestPinRangeLow:
          type: integer
          format: int64
          example: 1000
        guestPinRangeHigh:
          type: integer
          format: int64
          example: 9999
        vMRAvailableBefore:
          type: integer
          format: int32
          example: 30
          description: the number of minutes VMR meeting must be available before start
        maxParticipants:
          type: integer
          format: int32
          example: 5
        endMeetingOnEndTime:
          type: boolean
          example: true
        uriNumberRangeLow:
          type: integer
          format: int64
          example: 1000
        uriNumberRangeHigh:
          type: integer
          format: int64
          example: 9999
        ivrTheme:
          type: string
          example: '10'
          maxLength: 100
        isDefaultTemplate:
          type: boolean
          default: false
          example: true
          description: only one default template per organization. Setting it will unset other default template
        isPoolTemplate:
          type: boolean
          default: false
          example: true
          description: only one pool template per organization
        customPortalGuest:
          type: string
          example: https://some.custom.portal/%uri-with-domain%?pin=%pin%
          maxLength: 200
          description: If the scheduling template should use a custom portal for the guest portal.
        customPortalHost:
          type: string
          example: https://some.custom.portal/%uri-with-domain%?pin=%pin%
          maxLength: 200
          description: If the scheduling template should use a custom portal for the host portal.
        returnUrl:
          type: string
          example: https://some.url/xyz
          maxLength: 200
          description: If set this is the url that the portal should redirect the user to when the meeting ends.
        vmrType:
          $ref: '#/components/schemas/vmrType'
        hostView:
          $ref: '#/components/schemas/viewType'
        guestView:
          $ref: '#/components/schemas/viewType'
        vmrQuality:
          $ref: '#/components/schemas/vmrQuality'
        enableOverlayText:
          type: boolean
          example: true
          default: true
          description: if participant name overlays are enabled, the display names or aliases of all participants are shown in a text overlay along the bottom of their video image
        guestsCanPresent:
          type: boolean
          example: true
          default: true
          description: controls whether the Guests in the conference are allowed to present content
        forcePresenterIntoMain:
          type: boolean
          example: true
          default: true
          description: controls whether the Host who is presenting is locked into the main video position
        forceEncryption:
          type: boolean
          example: false
          default: false
        muteAllGuests:
          type: boolean
          example: false
          default: false
          description: controls whether to mute guests when they first join the conference
        directMedia:
          $ref: '#/components/schemas/directMedia'
        createdBy:
          $ref: '#/components/schemas/meetingUser'
        updatedBy:
          $ref: '#/components/schemas/meetingUser'
        createdTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        updatedTime:
          description: NB! Format changes in v2 from '2019-10-02T13:00:00 +0000' to '2019-10-02T15:00:00+02:00'
          type: string
          format: date-time
          example: 2019-10-02T15:00:00+02:00
        _links:
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: http://localhost:8081/api/scheduling-template/46b46a1e-a4d3-4387-87ee-a67dcaa222cb
    schedulingTemplateRequest:
      type: object
      required:
        - conferencingSysId
        - uriPrefix
        - uriDomain
        - hostPinRequired
        - guestPinRequired
        - uriNumberRangeLow
        - uriNumberRangeHigh
        - ivrTheme
      properties:
        conferencingSysId:
          type: integer
          format: int64
          example: 1234
        uriPrefix:
          type: string
          maxLength: 100
          example: "abc"
        uriDomain:
          type: string
          maxLength: 100
          example: "test.dk"
        hostPinRequired:
          type: boolean
          example: true
        hostPinRangeLow:
          type: integer
          format: int64
          example: 1000
        hostPinRangeHigh:
          type: integer
          format: int64
          example: 9999
        guestPinRequired:
          type: boolean
          example: true
        guestPinRangeLow:
          type: integer
          format: int64
          example: 1000
        guestPinRangeHigh:
          type: integer
          format: int64
          example: 9999
        vmrAvailableBefore:
          type: integer
          format: int32
          example: 30
          description: the number of minutes VMR meeting must be available before start
          default: 0
        maxParticipants:
          type: integer
          format: int32
          example: 5
          default: 0
        endMeetingOnEndTime:
          type: boolean
          example: true
          default: false
        uriNumberRangeLow:
          type: integer
          format: int64
          example: 1000
        uriNumberRangeHigh:
          type: integer
          format: int64
          example: 9999
        ivrTheme:
          type: string
          example: '10'
          maxLength: 100
        isDefaultTemplate:
          type: boolean
          default: false
          example: true
          description: only one default template per organization. Setting it will unset other default template
        isPoolTemplate:
          type: boolean
          default: false
          example: true
          description: only one pool template per organization
        customPortalGuest:
          type: string
          example: https://some.custom.portal/%uri-with-domain%?pin=%pin%
          maxLength: 200
          description: If the scheduling template should use a custom portal for the guest portal.
        customPortalHost:
          type: string
          example: https://some.custom.portal/%uri-with-domain%?pin=%pin%
          maxLength: 200
          description: If the scheduling template should use a custom portal for the host portal.
        returnUrl:
          type: string
          example: https://some.url/xyz
          maxLength: 200
          description: If set this is the url that the portal should redirect the user to when the meeting ends.
        vmrType:
          $ref: '#/components/schemas/vmrType'
        hostView:
          $ref: '#/components/schemas/viewType'
        guestView:
          $ref: '#/components/schemas/viewType'
        vmrQuality:
          $ref: '#/components/schemas/vmrQuality'
        enableOverlayText:
          type: boolean
          example: true
          default: true
          description: if participant name overlays are enabled, the display names or aliases of all participants are shown in a text overlay along the bottom of their video image
        guestsCanPresent:
          type: boolean
          example: true
          default: true
          description: controls whether the Guests in the conference are allowed to present content
        forcePresenterIntoMain:
          type: boolean
          example: true
          default: true
          description: controls whether the Host who is presenting is locked into the main video position
        forceEncryption:
          type: boolean
          example: false
          default: false
        muteAllGuests:
          type: boolean
          example: false
          default: false
          description: controls whether to mute guests when they first join the conference
        directMedia:
          $ref: '#/components/schemas/directMedia'

    pool-info:
      type: object
      required:
        - organisationId
        - email
      properties:
        organisationId:
          type: string
          maxLength: 30
        desiredPoolSize:
          type: integer
          format: int32
        availablePoolSize:
          type: integer
          format: int32
        schedulingTemplate:
          $ref: '#/components/schemas/scheduling-template'
        schedulingInfoList:
          type: array
          items:
            $ref: '#/components/schemas/scheduling-info'

    not-acceptable:
      type: integer
      format: int32
      description: >-
        - errorCode: 10 <br>
          errorText: 'Meeting must have status AWAITS_PROVISION (0)  or PROVISIONED_OK (3) in order to be updated' <br>
        - errorCode: 11 <br>
          errorText: 'Meeting must have status AWAITS_PROVISION (0) in order to be deleted' <br>
        - errorCode: 20 <br>
          errorText: 'The Uri assignment failed due to invalid setup on the template used' <br>
        - errorCode: 21 <br>
          errorText: 'The Uri assignment failed. It was not possible to create a unique. Consider changing the interval on the template' <br>
        - errorCode: 30 <br>
          errorText: 'The guest pincode assignment failed due to invalid setup on the template used' <br>
        - errorCode: 31 <br>
          errorText: 'The host pincode assignment failed due to invalid setup on the template used' <br>
        - errorCode: 32 <br>
          errorText: "Create or update of pool template failed due to only one pool template allowed"
      enum:
        - 10
        - 11
        - 20
        - 21
        - 30
        - 31
        - 32

    bad-request:
      type: integer
      description: >-
        - errorCode: 10 <br>
          errorText: 'Can not create ad hoc meeting on non ad hoc organization: xxx' <br>
        - errorCode: 11 <br>
          errorText: 'Unused scheduling information not found for organisation xxx' <br>
        - errorCode: 12 <br>
          errorText: 'ExternalId not unique within organisation.' <br>
        - errorCode: 13 <br>
          errorText: 'OrganisationId xxx in request not found.' <br>
        - errorCode: 14 <br>
          errorText: 'Scheduling information can not be created on organisation xxx that is not pool enabled.' <br>
        - errorCode: 20 <br>
          errorText: 'Unable to generate unique shortId. Try again.' <br>
        - errorCode: 30 <br>
          errorText: 'Date format is wrong, year must only have 4 digits' <br>
        - errorCode: 40 <br>
          errorText: 'Scheduling template xxx not found.' <br>
        - errorCode: 41 <br>
          errorText: 'Scheduling template yyy does not belong to organisation xxx.' <br>
        - errorCode: 50 <br>
          errorText: 'Either both from-start-time and to-start-time must be provided or none of them must be provided.' <br>
        - errorCode: 60, <br>
          errorText: 'ReservationId not owned by organisation or not found.' <br>
        - errorCode: 70 <br>
          errorText: 'Field can not be set to null' <br>
        - errorCode: 80 <br>
          errorText: 'Organisation does not allow setting custom meeting address.' <br>
        - errorCode: 90 <br>
          errorText: 'Supplied URI already used' <br>
        - errorCode: 100 <br>
          errorText: 'Supplied URI contains invalid characters. Valid characters: [A-Z], [a-z] and [0-9].' <br>
        - errorCode: 110 <br>
          errorText: 'Scheduling info reservation can not be used in combination with guest pin and/or host pin.' <br>
        - errorCode: 120 <br>
          errorText: "Additional info keys not unique for meeting."
      enum:
        - 10
        - 11
        - 12
        - 13
        - 14
        - 20
        - 30
        - 40
        - 41
        - 50
        - 60
        - 70
        - 80
        - 90
        - 100
        - 110
        - 120

    detailedError:
      allOf:
        - $ref: '#/components/schemas/basicError'
        - type: object
          required:
            - detailed_error
            - detailed_error_code
          properties:
            detailed_error:
              description: Detailed error text. This could be a text describing an validation error.
              type: string
            detailed_error_code:
              description: >-
                Detailed error code. This could be a code describing an validation error. <br>
                * 10: 'Input validation error.' <br>
                * 11: 'Basic error.' <br>
                * 12: 'Meeting must have status AWAITS_PROVISION (0)  or PROVISIONED_OK (3) in order to be updated' <br>
                * 13: 'Meeting must have status AWAITS_PROVISION (0) in order to be deleted' <br>
                * 14: 'The Uri assignment failed due to invalid setup on the template used' <br>
                * 15: 'The Uri assignment failed. It was not possible to create a unique. Consider changing the interval on the template' <br>
                * 16: 'The guest pin code assignment failed due to invalid setup on the template used' <br>
                * 17: 'The host pin code assignment failed due to invalid setup on the template used' <br>
                * 18: 'Create or update of pool template failed due to only one pool template allowed' <br>
                * 19: 'Can not create ad hoc meeting on non ad hoc organization: xxx' <br>
                * 20: 'Unused scheduling information not found for organisation xxx' <br>
                * 21: 'ExternalId not unique within organisation.' <br>
                * 22: 'OrganisationId xxx in request not found.' <br>
                * 23: 'Scheduling information can not be created on organisation xxx that is not pool enabled.' <br>
                * 24: 'Unable to generate unique shortId. Try again.' <br>
                * 25: 'Date format is wrong, year must only have 4 digits' <br>
                * 26: 'Scheduling template xxx not found.' <br>
                * 27: 'Scheduling template yyy does not belong to organisation xxx.' <br>
                * 28: 'Either both from-start-time and to-start-time must be provided or none of them must be provided.' <br>
                * 29: 'ReservationId not owned by organisation or not found.' <br>
                * 30: 'Field can not be set to null' <br>
                * 31: 'Organisation does not allow setting custom meeting address.' <br>
                * 32: 'Supplied URI already used' <br>
                * 33: 'Supplied URI contains invalid characters. Valid characters: [A-Z], [a-z] and [0-9].' <br>
                * 34: 'Scheduling info reservation can not be used in combination with guest pin and/or host pin.' <br>
                * 35: 'Additional info keys not unique for meeting.' <br>
                * 36: 'Must set at least one query parameter, when searching for meeting.'
              type: string
              enum:
                - 10
                - 11
                - 12
                - 13
                - 14
                - 15
                - 16
                - 17
                - 18
                - 19
                - 20
                - 21
                - 22
                - 23
                - 24
                - 25
                - 26
                - 27
                - 28
                - 29
                - 30
                - 31
                - 32
                - 33
                - 34
                - 35
                - 36

    basicError:
      type: object
      required:
        - timestamp
        - status
        - error
        - path
      properties:
        error:
          description: Error message.
          type: string
        path:
          description: Path
          type: string
        status:
          description: HTTP status code
          type: integer
        timestamp:
          description: Time of error
          type: string
          format: date-time