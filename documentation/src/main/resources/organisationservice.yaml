openapi: 3.0.0
info:
  title: VDX Organisation API
  description: API description for the VDX Organisation interface<br><br><h3>Changelog:</h3>
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: Organisation
    description: Read, search, create, and update operations for Organisations
  - name: Organisationtree
    description: Search operations for the hierarchy of Organisations
  - name: Info
    description: Technical information regarding the service
servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /info:
    get:
      tags:
        - Info
      summary: gets some generel information on the API
      description: Use this as an initial test to see if the API is up running and replying.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'
  /services/organisation:
    get:
      tags:
        - Organisation
      summary: Gets a list of organisations
      description: Gets a list of organisations
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organisation'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
    put:
      tags:
        - Organisation
      summary: Updates an existing organisation
      description: Updates the attributes (name, poolSize) of specific organisation identified by the code property. Changing the parentCode on an organisation will move the organisation (and the organisations below it) to a new location
      requestBody:
        description: Organisation details to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/organisation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'      
        '404':
          $ref: '#/components/responses/404'      
        '409':
          $ref: '#/components/responses/409'              
    post:
      tags:
        - Organisation
      summary: Creates a new organisation
      description: Creates a new organisation
      requestBody:
        description: Organisation to create - specifying the parentCode will determine the placement of the new organisation in the hierarchy
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/organisation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'      
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'          
  /services/organisation/{code}:
    get:
      tags:
        - Organisation
      summary: Get a specific organisation
      description: Get a specific organisation identified by its code
      parameters: 
       - name: code
         in: path
         required: true
         schema:
          type: string
         example: 'organisation_a'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'      
        '404':
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Organisation
      summary: Deletes a specific organisation
      description: Delete a specific organisation identified by its code, if the organisation has organisations below it they will also be deleted
      parameters: 
       - name: code
         in: path
         required: true
         schema:
          type: string
         example: 'organisation_a'
      responses:
        '200':
          description: Ok
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'      
        '404':
          $ref: '#/components/responses/404'
  /services/organisationtree/{code}:
    get:
      tags:
        - Organisation
      summary: Get a specific part of the organisation tree
      description: Get a specific organisation tree (rooted at the specified code)
      parameters: 
       - name: code
         in: path
         required: false
         schema:
          type: string
         example: 'organisation_a'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisationtree'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'      
        '404':
          $ref: '#/components/responses/404'
  /services/organisationtree:
    get:
      tags:
        - Organisation
      summary: Get all organisation trees
      description: Get all organisation trees (available for the calling user)
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organisationtree'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'      
components:
  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"
    '404': 
      description: "Not Found. This could be because: <br> * The organisation requested has been deleted or has never existed"
    '409': 
      description: "Conflict. This could be because: <br> * A uniqueness constraint on organisation code is being violated"
  schemas:
    info:
      type: object
      properties:
        git:
          properties:
            commit:
              properties:
                time:
                  type: string
                  example: "10.10.2018 @ 11:52:54 CEST"
                id:
                  type: string
                  example: "97fd935"
            branch:
              type: string
              example: "master"
    organisation:
      type: object
      required:
      - code
      - name
      - poolSize
      properties:
        parentCode:
          description: The code that uniquely identifies the parent organisation
          type: string
          maxLength: 100
          example: level_one_org
        code:
          description: The code that uniquely identifies an organisation
          type: string
          maxLength: 100
          example: organisation_a
        name:
          description: The name of the organisation
          type: string
          maxLength: 100
          example: Organisation with the full name A
        poolSize:
          description: The meeting room pool size for the organisation
          type: integer
          format: int32
          example: 200
    organisationtree:
      type: object
      required:
      - code
      - name
      - poolSize
      properties:
        code:
          description: The code that uniquely identifies an organisation
          type: string
          maxLength: 100
          example: organisation_a
        name:
          description: The name of the organisation
          type: string
          maxLength: 100
          example: Organisation with the full name A
        poolSize:
          description: The meeting room pool size for the organisation
          type: integer
          format: int32
          example: 200
        children:
          description: The suborganisations of this organisation
          type: array
          items:
            $ref: '#/components/schemas/organisationtree'
